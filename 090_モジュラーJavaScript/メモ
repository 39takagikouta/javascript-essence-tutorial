コードの肥大化→整理、分割のためにしよう

1モジュール
とは、ソースコードを機能ごとに分割して、メンテナンスしやすくする仕組み
モジュール管理の仕組みとして、ESMとCJSが存在
node.jsが開発された際には、ES6がなかったので、モジュール管理システムとしてcommon.jsが使われていた
詳細は動画参照

2importとexport
モジュールの中身で設定した変数を、返り値のオブジェクトで渡した時点で、変数がコピーされているので、外部からその値を変更したとしても、元の変数の値は変わらない

3ESmoduleと即時関数
動きが似ている
プリミティブ型をexportして、その先で変更しようとするとこっちの場合はエラーが出る
だから基本的にオブジェクトで渡すか、プリミティブ型を変更するならば関数ないでその処理を行う

4モジュールコンテキストとモジュールスコープ
グローバルコンテキスト（ファイル直下のコンテキスト）の部分でだけthisが使えない
windowは使えるが、基本的にはimportとエクスポートを使う

5モジュールの特徴
htmlもオブジェクト　だから取得できる
1type="module"は非同期だから、全ての処理が終わった後
ちなみに、普通の読み込みでもdeferを書いたら非同期になる
2複数書いても一度しか読み込まれない　そこも即時関数と同じ
importでも同じ
3ストリクトモードになる

6ストリクトモード
jsの書き方を制限するもの
目的
バグ予防、予約語の確保、コードのセキュア化
jsは小さい開発のために作られた言語、今日の大規模開発で使われる際にこれを用いる
thisの細かな挙動が変わる（動画参照）
moduleは常にストリクトモードになる