1関数
二つの引数を定義する場合、二つ目だけに引数を与えることはできない。それがしたいときは一つ目にnullを入れたりする
正、一つ目だけに入れることはできる。その際は二つ目はundefined
同じ名前の関数が二つあれば、下にある方が採用される
いずれかを関数式にしたら重複を知らせるエラーが出る（基本は関数式の場合無名関数で使用するが）
undifinedはシステム側が基本的に設定するもので、意図的に空を入れたいのならnullを使う
augumentsは関数コンテキストができた時に自動でできるオブジェクト
関数呼び出し時の実引数が入る　関数側で引数を設定していなくても使える
以前は引数の数が決まっていない時に使っていたが、現在はレストパラメーターを使う　...args　こっちは配列で入っているから操作しやすい

2関数とオブジェクトの関係
関数は実行可能なオブジェクトである
プロパティーと値を追加することもできる
jsは、仮引数と実引数の数が一致している必要はない
実際によく使われる例
setTimeout(hello, 2000);
jsエンジンによって使用できるweb APIsの一つ
よく使う機能をコールバック関数としておけば、上記のsetTimeoutのようなもので使いまわせる

3this
グローバルコンテキストでも作られるが、主に関数コンテキストで使われることが多い
thisは呼び出し下のオブジェクトへの参照を保持する

4参照のコピーとthis
オブジェクトのメソッドの場合　this = 呼び出し元のオブジェクト
関数の場合、　this = グローバルオブジェクト（window）

5コールバック関数とthis
オブジェクトのメソッドをコールバック関数として渡した場合は、関数なので、上記が適用される

6bind
bindメソッドを使えば、thisの中身と引数が固定される（新たに引数を設定してもこっちが優先される）
三章がコピーされるが、新しい関数が作成され、メモリに配置される